name: "FIGlet Font"
scopeName: "source.figfont"
fileTypes: ["flf", "tlf"]
firstLineMatch: """(?x)
	# Magic number
	\\Aflf2a
	|
	# Modeline
	(?:
		# Emacs
		-\\*-(?i:[ \\t]*(?=[^:;\\s]+[ \\t]*-\\*-)|(?:.*?[ \\t;]|(?<=-\\*-))[ \\t]*mode[ \\t]*:[ \\t]*)
			(?i:fig(?:let)?+[-_]?(?:font|(?<=let)))
		(?=[ \\t;]|(?<![-*])-\\*-).*?-\\*-
		
		|
		
		# Vim
		(?:(?:^|[ \\t])(?:vi|Vi(?=m))(?:m[<=>]?[0-9]+|m)?|[ \\t]ex)(?=:(?=[ \\t]*set?[ \\t][^\\r\\n:]+:)|:(?![ \\t]*set?[ \\t]))
		(?:(?:[ \\t]*:[ \\t]*|[ \\t])\\w*(?:[ \\t]*=(?:[^\\\\\\s]|\\\\.)*)?)*[ \\t:]
		(?:filetype|ft|syntax)[ \\t]*=
			(?i:fig(?:let)?+[-_]?(?:font|(?<=let)))
		(?=$|\\s|:)
	)
"""
patterns: [include: "#main"]

repository:
	main:
		patterns: [
			{include: "#prologue"}
			{include: "#codeTag"}
			{include: "#codeTagTable"}
			{include: "#fontData"}
			{include: "#endmarks"}
		]


	# Run-of-the-mill integer
	integer:
		name: "constant.numeric.decimal.integer.int.figfont"
		match: "[-+]?[0-9]+"


	# Header-line and comments
	prologue:
		name:  "meta.prologue.figfont"
		begin: "^([ft]lf2a)(\\S|\\x7F)(\\s+.+)?\\s*$"
		end:   "^\\s*(?=\\2(?!.*(?i:hard\\W?blank))|.{0,6}[#@]\\s*$)"
		contentName: "comment.block.freeform.figfont"
		beginCaptures:
			0: name: "meta.header-line.figfont"
			1: name: "keyword.control.file.signature.figfont"
			2: name: "variable.parameter.hardblank.figfont"
			3: patterns: [include: "#integer"]
	
	
	# Character codepoint followed by Unicode description
	codeTag:
		name:  "meta.code-tag.figfont"
		match: """(?x) ^(?!.+[@#]$)
			( (-(?:0[Xx])?0*1)(?=\\s|$)        # Invalid -1
			| (\\+?(?:[1-9][0-9]*|0(?=\\s|$))) # Decimal
			| (\\+?0[0-7]+)                    # Octal
			| (\\+?0[Xx][0-9A-Fa-f]+)          # Hex
			)
			(?:\\s+(\\S.*))?
			(?=\\s*$)
		"""
		captures:
			1: name: "meta.codepoint.figfont"
			2: name: "invalid.illegal.reserved-codepoint.figfont"
			3: name: "constant.numeric.decimal.integer.int.figfont"
			4: name: "constant.numeric.octal.integer.int.figfont"
			5: name: "constant.numeric.hexadecimal.hex.integer.int.figfont"
			6: name: "string.unquoted.description.figfont"
	
	
	# Translation table indicated by negative codepoint
	codeTagTable:
		name: "meta.translation-table.figfont"
		begin: """(?x) ^(?!.+[@#]$)
			( (-(?:[1-9][0-9]*|0(?=\\s|$))) # Decimal
			| (-0[0-7]+)                    # Octal
			| (-0[Xx][0-9A-Fa-f]+)          # Hex
			)
			(?:\\s+(\\S.*))?
			\\s*$\\n?
		"""
		end: "(?<=@@|##)[ \\t]*$"
		beginCaptures:
			0: name: "meta.code-tag.figfont"
			1: name: "meta.negative.codepoint.figfont"
			2: name: "constant.numeric.decimal.integer.int.figfont"
			3: name: "constant.numeric.octal.integer.int.figfont"
			4: name: "constant.numeric.hexadecimal.hex.integer.int.figfont"
			5: name: "string.unquoted.description.figfont"
		contentName: "string.interpolated.code-tag.figfont"
		patterns: [include: "#endmarks"]
	
	# Glyph data
	fontData:
		name:  "constant.character.sub-character.figfont"
		match: "[^#@\\s]+|#+(?!#*[ \\t]*$)|@+(?!@*[ \\t]*$)"
	
	
	# Terminals for each data-row
	endmarks:
		name: "keyword.operator.endmark.character.figfont"
		match: "(?:@+|#+)[ \\t]*$"
